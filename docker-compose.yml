version: '3'

services:
  sourcedb:
    build: ./api/docker/sshcli
    restart: unless-stopped
    environment:
      - SSHCLI_SSH_ID_ACCESS=${SSHCLI_SSH_ID_ACCESS:-}
      - SSHCLI_SSH_CONFIG=${SSHCLI_SSH_CONFIG:-}
    ports:
      - 3307:3306
    command: [ "ssh", "-NL", "0.0.0.0:3306:${SOURCEDB_HOST:-localhost}:${SOURCEDB_HOST_PORT:-3306}", "${SOURCE_DB_PROXY_HOST}" ]
  db:
    image: mysql:8.0.21
    restart: unless-stopped
    depends_on:
      - sourcedb
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
    command: --federated
    env_file: .mysql.env
    ports:
      - 3306:3306
    volumes:
      - db-conf:/etc/mysql/conf.d
      - db-var:/var/lib/mysql
      - db-log:/var/log/mysql
    cap_add:
      - SYS_NICE
  api:
    depends_on:
      - db
    build: ./api
    restart: unless-stopped
    env_file:
      - .mysql.env
      - .api.env
  nginx:
    depends_on:
      - api
    build: ./www
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - nginx-letsencrypt-certs:/etc/letsencrypt
      - nginx-letsencrypt-data:/var/lib/letsencrypt
      - nginx-log:/var/log/nginx/
  nginx-2:
    depends_on:
      - api
    # build: ./www
    image: nginx:1.19.2-alpine-perl
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - nginx-www-build:/var/www
      - nginx-letsencrypt-certs:/etc/letsencrypt
      - nginx-letsencrypt-data:/var/lib/letsencrypt
      - nginx-log:/var/log/nginx/
  cert:
    image: certbot/certbot
    restart: "no"
    volumes:
      - nginx-letsencrypt-certs:/etc/letsencrypt
      - nginx-letsencrypt-data:/var/lib/letsencrypt
volumes:
  db-conf:
  db-var:
  db-log:
  nginx-www-build:
  nginx-letsencrypt-certs:
  nginx-letsencrypt-data:
  nginx-log:
